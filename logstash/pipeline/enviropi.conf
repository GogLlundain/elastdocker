input {
    file {
        path => "/usr/share/logstash/src/pi/*.log"
        sincedb_path => "/usr/share/logstash/src/pi_last_position"
        start_position => "beginning"
        tags => [ "recorded" ]
    }

    file {
        path => "/usr/share/logstash/src/darksky/*.log"
        sincedb_path => "//usr/share/logstash/src/darksky_last_position"
        start_position => "beginning"
        tags => [ "darksky" ]
    }
}


filter {

    if "recorded" in [tags] {
        grok {
            match => {
                "message" => "%{TIMESTAMP_ISO8601:event_time},%{BASE10NUM:temperature} C,%{BASE10NUM:pressure} hPa,%{BASE10NUM:humidity} %RH(,%{BASE10NUM:air_quality} Ohms)?(,Location\: %{GREEDYDATA:location})?"
            }
        }

        date {
            match => [ "event_time", "ISO8601" ]
        }

        # I added location later in the log files, needed a default location!
        if ![location] {
            mutate { add_field => { "[location]" => "Bedroom" } }
        }
    }

    if "darksky" in [tags] {
        grok {
            match => {
                "message" => "%{INT:event_time},%{BASE10NUM:temperature} C,%{BASE10NUM:pressure} hPa,%{BASE10NUM:humidity} %RH(,Location\: %{GREEDYDATA:location})?"
            }
        }

        # Dark sky return a humidity % between 0 and 1, pimorino goes from 0 to 100.
        ruby {
            code => 'event.set("humidity", event.get("humidity").to_f * 100)'
        }

        date {
            match => [ "event_time", "UNIX" ]
        }
    }

    if "_grokparsefailure" in [tags] {
        drop { }
    }

    mutate {
        remove_field => ["event_time", "message", "path" ]
    }
}

output {
    if "_grokparsefailure" not in [tags] {
        elasticsearch {
            hosts => "${ELASTICSEARCH_HOST_PORT}"
            user => "${ELASTIC_USERNAME}"
            password => "${ELASTIC_PASSWORD}"
            index => "environment-%{+YYYY.MM.dd}"
        }
    }
    else {
        elasticsearch {
            hosts => "${ELASTICSEARCH_HOST_PORT}"
            user => "${ELASTIC_USERNAME}"
            password => "${ELASTIC_PASSWORD}"
            index => "failed-environment-%{+YYYY.MM.dd}"
        }
    }

}